syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";


package dfs_service;

service DFSService {

    // Add your service calls here

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server
    rpc fileUploadRequest(stream UploadRequest) returns (UploadResponse);

    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server
    rpc fileFetcher(FetchRequest) returns (stream FetchResponse);

    // 3. REQUIRED (Parts 1 & 2): A method to delete files from the server
    rpc fileDeleter(DeleteRequest) returns (google.protobuf.Empty);

    // 4. REQUIRED (Parts 1 & 2): A method to list all files on the server
    rpc fileLister(google.protobuf.Empty) returns (ListResponse);

    // 5. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server
    rpc fileStatuser(StatusRequest) returns (StatusResponse);

    // 7. Any other methods you deem necessary to complete the tasks of this assignment

}

// Alex's Messages. Yes it's repetitive but it keeps it simple

//Upload request msg
message UploadRequest{
    string fileName = 1;
    bytes fileChunk = 2;
    uint32 fileChunkSize = 3;
    uint32 fileSize = 4;
}

//Response msg
message UploadResponse{
    string fileName = 1;
    int32 fileStatus = 2;
}

//Fetch Request Msg
message FetchRequest{
    string fileName = 1;
}

//Fetch Response Msg
message FetchResponse{
    bytes content = 1;
    uint32 fileSize = 2;
}

//Delete Request Msg
message DeleteRequest{
    string fileName = 1;
}

//List Response Msg
message ListResponse{
    uint32 ListLength = 1;
    repeated ListElementResponse file = 2;
}

//Info needed for each file in client list function
message ListElementResponse{
    string fileName = 1;
    google.protobuf.Timestamp mTime = 2;
}

//Status Request Msg
message StatusRequest{
    string fileName = 1;
}

//Status Response Msg
message StatusResponse{
    string fileName = 1;
    int32 fileSize = 2;
    google.protobuf.Timestamp mTime = 5;
    int32 fileStatus = 6;
}


